plugins {
    id "maven"
    id "signing"
    id "java"
}

apply from: '../versions.gradle'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    google()
    mavenCentral()
    jcenter()
}

dependencies {
    compile gradleApi()
    compile 'com.squareup:javapoet:1.11.1'
    //compile 'com.github.javaparser:javaparser-core:3.13.6'
    compile 'commons-io:commons-io:2.6'
    compile 'com.android.tools.build:gradle:3.5.0'
}

def checkSigning() {
    ext."signing.secretKeyRingFile" = System.properties['user.home'] + '/.gnupg/secring.gpg'
    if (!hasProperty("signing.keyId")) {
        ext."signing.keyId" = System.getenv("signingKeyId")
    }
    if (!hasProperty("signing.password")) {
        ext."signing.password" = System.getenv("signingPassword")
    }
}

def getReleaseRepositoryUrl() {
    return hasProperty('NEXUS_RELEASE_REPOSITORY_URL') ? NEXUS_RELEASE_REPOSITORY_URL : ""
}

def getSnapshotRepositoryUrl() {
    return hasProperty('NEXUS_SNAPSHOT_REPOSITORY_URL') ? NEXUS_SNAPSHOT_REPOSITORY_URL : ""
}

def getRepositoryUsername() {
    return hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : System.getenv("NEXUS_USERNAME")
}

def getRepositoryPassword() {
    return hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : System.getenv("NEXUS_PASSWORD")
}

signing {
    required { gradle.taskGraph.hasTask(":uploadArchives") }
    checkSigning()
    sign configurations.archives
}

tasks.withType(Sign) {
    onlyIf { gradle.taskGraph.hasTask(":uploadArchives") }
}

task packageJavadoc(type: Jar, dependsOn: 'javadoc') {
    from javadoc.destinationDir
    classifier = 'javadoc'
}

task packageSources(type: Jar, dependsOn: 'classes') {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives packageJavadoc
    archives packageSources
}

install {
    repositories.mavenInstaller {
        pom.version = VERSION_NAME
        pom.artifactId = POM_INJECTOR_NAME
        pom.groupId = GROUP
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: getReleaseRepositoryUrl()) {
                authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
            }
            snapshotRepository(url: getSnapshotRepositoryUrl()) {
                authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
            }
            pom.version = VERSION_NAME
            pom.artifactId = POM_INJECTOR_NAME
            pom.groupId = GROUP

            pom.project {
                name POM_INJECTOR_NAME
                packaging POM_JAR_PACKAGING
                description POM_INJECTOR_DESCRIPTION
                url POM_URL

                scm {
                    url POM_SCM_URL
                    connection POM_SCM_CONNECTION
                    developerConnection POM_SCM_DEV_CONNECTION
                }

                licenses {
                    license {
                        name POM_LICENCE_NAME
                        url POM_LICENCE_URL
                        distribution POM_LICENCE_DIST
                    }
                }

                developers {
                    developer {
                        id POM_DEVELOPER_ID
                        name POM_DEVELOPER_NAME
                    }
                }
            }
        }
    }
}
